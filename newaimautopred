local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

_G.lock = false
_G.Smoothness = 0.1
_G.LockonPart = "Head" -- Default aimbot part
_G.Prediction = false
_G.FOVRadius = 200 -- FOV radius in pixels
_G.Teamcheck = false -- Enable/disable team check
_G.WallCheck = false -- Enable/disable wall check

-- Keybind options
local KeybindOptions = {
    "MouseButton2", -- Right Mouse Button
    "MouseButton1", -- Left Mouse Button
    "E",
    "Q",
    "LeftControl",
    "LeftAlt",
    "LeftShift",
    "C",
    "X",
    "F"
}

_G.SelectedKeybind = "MouseButton2" -- Default keybind

-- Aimbot Part options (expanded list)
local AimbotPartOptions = {
    "Head",
    "HumanoidRootPart",
    "Torso",
    "Left Arm",
    "Right Arm",
    "Left Leg",
    "Right Leg",
    "LeftHand",
    "RightHand",
    "LeftFoot",
    "RightFoot",
    "UpperTorso",
    "LowerTorso",
    "LeftUpperArm",
    "RightUpperArm",
    "LeftLowerArm",
    "RightLowerArm",
    "LeftUpperLeg",
    "RightUpperLeg",
    "LeftLowerLeg",
    "RightLowerLeg"
}

-- Assuming you have a Tab object from your UI library


-- ... (rest of your existing functions remain the same)

local function isKeybindActive()
    if _G.SelectedKeybind == "MouseButton2" then
        return UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2)
    elseif _G.SelectedKeybind == "MouseButton1" then
        return UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)
    else
        local keyCode = Enum.KeyCode[_G.SelectedKeybind]
        return keyCode and UserInputService:IsKeyDown(keyCode)
    end
end

local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(_G.LockonPart) and not isTeamMate(player) then
            local targetPart = player.Character:FindFirstChild(_G.LockonPart)
            if targetPart and isWithinFOV(targetPart.Position) and isVisible(targetPart) then
                local pos = Camera:WorldToViewportPoint(targetPart.Position)
                local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)).magnitude

                if magnitude < shortestDistance then
                    closestPlayer = player
                    shortestDistance = magnitude
                end
            end
        end
    end

    return closestPlayer
end

RunService.RenderStepped:Connect(function()
    updateFOVCircle()
    if _G.lock and isKeybindActive() then
        local target = getClosestPlayer()
        if target then
            aimAt(target)
        end
    end
end)

-- Optional: Add key binding to toggle lock
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.X then -- Change 'X' to your preferred key
        _G.lock = not _G.lock
        print("Lock toggled:", _G.lock)
    end
end)
